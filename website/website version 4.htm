<!doctype html>
<html>
<head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<title>Keeley Projects</title>
<style type="text/css">
<!--
body {
	font: 100%/1.4 Verdana, Arial, Helvetica, sans-serif;
	background-color: #2D52A3;
	margin: 0;
	padding: 0;
	color: #000;
}
/* ~~ Element/tag selectors ~~ */
ul, ol, dl { /* Due to variations between browsers, it's best practices to zero padding and margin on lists. For consistency, you can either specify the amounts you want here, or on the list items (LI, DT, DD) they contain. Remember that what you do here will cascade to the .nav list unless you write a more specific selector. */
	padding: 0;
	margin: 0;
}
h1, h2, h3, h4, h5, h6, p {
	margin-top: 0;	 /* removing the top margin gets around an issue where margins can escape from their containing block. The remaining bottom margin will hold it away from any elements that follow. */
	padding-right: 15px;
	padding-left: 15px; /* adding the padding to the sides of the elements within the blocks, instead of the block elements themselves, gets rid of any box model math. A nested block with side padding can also be used as an alternate method. */
}
a img { /* this selector removes the default blue border displayed in some browsers around an image when it is surrounded by a link */
	border: none;
}
/* ~~ Styling for your site's links must remain in this order - including the group of selectors that create the hover effect. ~~ */
a:link {
	color: #42413C;
	text-decoration: underline; /* unless you style your links to look extremely unique, it's best to provide underlines for quick visual identification */
}
a:visited {
	color: #6E6C64;
	text-decoration: underline;
}
a:hover, a:active, a:focus { /* this group of selectors will give a keyboard navigator the same hover experience as the person using a mouse. */
	text-decoration: none;
}
/* ~~ This fixed width container surrounds all other blocks ~~ */
.container {
	width: 960px;
	background-color: #FFFFFF;
	margin: 0 auto; /* the auto value on the sides, coupled with the width, centers the layout */
}

.text-container
{
	width: 800px;
}
/* ~~ The header is not given a width. It will extend the full width of your layout. ~~ */
header {
	background-color: #ADB96E;
}
.background{
	background-color: #247BA0;
}

.footer-color
{
	background-color: #F2D0A4;
}
/* ~~ These are the columns for the layout. ~~ 

1) Padding is only placed on the top and/or bottom of the block elements. The elements within these blocks have padding on their sides. This saves you from any "box model math". Keep in mind, if you add any side padding or border to the block itself, it will be added to the width you define to create the *total* width. You may also choose to remove the padding on the element in the block element and place a second block element within it with no width and the padding necessary for your design.

2) No margin has been given to the columns since they are all floated. If you must add margin, avoid placing it on the side you're floating toward (for example: a right margin on a block set to float right). Many times, padding can be used instead. For blocks where this rule must be broken, you should add a "display:inline" declaration to the block element's rule to tame a bug where some versions of Internet Explorer double the margin.

3) Since classes can be used multiple times in a document (and an element can also have multiple classes applied), the columns have been assigned class names instead of IDs. For example, two sidebar blocks could be stacked if necessary. These can very easily be changed to IDs if that's your preference, as long as you'll only be using them once per document.

4) If you prefer your nav on the left instead of the right, simply float these columns the opposite direction (all left instead of all right) and they'll render in reverse order. There's no need to move the blocks around in the HTML source.

*/
.sidebar1 {
	float: right;
	width: 180px;
	background-color: #C03221;
	padding-bottom: 10px;

}
.content {
	padding: 10px 0;
	width: 780px;
	float: right;
}

/* ~~ This grouped selector gives the lists in the .content area space ~~ */
.content ul, .content ol {
	padding: 0 15px 15px 40px; /* this padding mirrors the right padding in the headings and paragraph rule above. Padding was placed on the bottom for space between other elements on the lists and on the left to create the indention. These may be adjusted as you wish. */
}

/* ~~ The navigation list styles (can be removed if you choose to use a premade flyout menu like Spry) ~~ */
ul.nav {
	list-style: none; /* this removes the list marker */
	border-top: 1px solid #666; /* this creates the top border for the links - all others are placed using a bottom border on the LI */
	margin-bottom: 15px; /* this creates the space between the navigation on the content below */
}
ul.nav li {
	border-bottom: 1px solid #666; /* this creates the button separation */
}
ul.nav a, ul.nav a:visited { /* grouping these selectors makes sure that your links retain their button look even after being visited */
	padding: 5px 5px 5px 15px;
	display: block; /* this gives the link block properties causing it to fill the whole LI containing it. This causes the entire area to react to a mouse click. */
	width: 160px;  /*this width makes the entire button clickable for IE6. If you don't need to support IE6, it can be removed. Calculate the proper width by subtracting the padding on this link from the width of your sidebar container. */
	text-decoration: none;
	background-color: #C6D580;
}
ul.nav a:hover, ul.nav a:active, ul.nav a:focus { /* this changes the background and text color for both mouse and keyboard navigators */
	background-color: #ADB96E;
	color: #FFF;
}


/* ~~ The footer ~~ */
footer {
	padding: 10px 0;
	background-color: #CCC49F;
	position: relative;/* this gives IE6 hasLayout to properly clear */
	clear: both; /* this clear property forces the .container to understand where the columns end and contain them */
}
.button {
    background-color: #043565;
    border: none;
    color: #f7f7ff;
    padding: 20px 40px;
    text-align: center;
    font-size: 16px;
    cursor: pointer;
}
/* Style the buttons that are used to open and close the accordion panel */
.accordion {
    background-color: #f2d0a4;
    color: #c03221;
    cursor: pointer;
    padding: 18px;
    width: 100%;
    text-align: left;
    border: none;
    outline: none;
    transition: 1s;
}

/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */
.active, .accordion:hover {
    background-color: #043565;
}

/* Style the accordion panel. Note: hidden by default */

.panel {
    padding: 0px;
    background-color: white;
    max-height: 25px;
    overflow: hidden;
    transition: max-height 0.2s ease-out;
}

/*HTML 5 support - Sets new HTML 5 tags to display:block so browsers know how to render the tags properly. */
header, section, footer, aside, article, figure {
	display: block;
}

<!-- css for resizing the banner images -->
* {
    box-sizing: border-box;
}

.column {
    float: left;
    width: 50%%;
    padding: 0px;
}



/* Responsive layout - makes the three columns stack on top of each other instead of next to each other */
@media screen and (max-width: 500px) {
    .column {
        width: 100%;
    }
}
<!-- end banner css -->
.column1 {    float: left;
    width: 100%;
    padding: 0px;
}
.column1 {        width: 100%;
}
.column2 {    float: left;
    width: 50%%;
    padding: 0px;
}
.column2 {        width: 100%;
}
-->
</style><!--[if lt IE 9]>
<script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script>
<![endif]-->

</head>

<body>
<div class = "background">
<div class="container">
  
    <!--<div class="row"> -->
  <span><img src="https://i.imgur.com/8dycdwY.png" alt="banner image" width="32%" height="225" style="width:100%"></span>
  <!--<span class="column2"><img src="https://i.imgur.com/gspy1tU.png" alt="Forest" width="100%" height="195"></span>-->
  <!--</div>-->
  
  <div class="sidebar1">
 	<input class="button" type="button" onclick="location.href='https://github.com/ZacharyKeeley';" value="Link to GitHub" />
    <h2>Biography</h2>
      <p>(Coming Soon)</p>
      <p></p>
    </aside>
  <!-- end .sidebar1 --></div>
  <article class="content">
    <center>
    <h2>My Website</h2>
    <p class = "">This website is dedicated to my personal projects. I wanted a website where I could showcase my projects to whoever wanted to see them. I created this website during the summer of 2018, at first it was more of just a way to test my HTML/CSS skills. However it evolved as time went on and has transformed into the product you see before you.</p>
    <p>We'll see where this goes in the future. I don't have any specific plans to change the layout but we'll see, you never know what the future holds ;)</p>
    <p>I could have used wordpress to make a more aesthetic site, but I wanted to test my HTML and CSS skills. This particular website uses a dreamweaver layout that has been modified to include dropdown menus and a more aesthetic color scheme.</p>
    <h2>The Projects</h2>
    </center>	
<button class="accordion"><center>Arduino Project</center></button>
<div class="panel">
	<center>
    <h3>///////////////////////////////////////////////////////</h3>
    <p>I was browsing YouTube one day and I stumbled across this YouTube channel named Devon Crawford (great channel btw, and I highly reccoment anyone reading this to go check it out). He did a project where he made a LED visualizer. I took the inspiration from that and decided to make an LED light strip that will change patterns based on the input from a remote control.</p>
    <p>This was my first project invlolving an arduino and I think it will be a great stepping stone to many other Arduino Projects in the future.</p>
    <img src = "https://i.imgur.com/R4Pcr22.gif" alt = "neopixels"></img>
    <p>16 September 2018. Neopixels in action.</p>
    <img src = "https://i.imgur.com/IGFDyub.jpg" width = 30% height = 30% alt = "neopixel strip"></img>
    <img src = "https://i.imgur.com/w7S3bAj.jpg" width = 30% height = 30% alt = "IR receiver"></img>
    <img src = "https://i.imgur.com/bu5GcD7.jpg" width = 30% height = 30% alt = "caps"></img>
    <p>16 September 2018. I got a lot done today. The caps came in and I was able to test out the neopixel strip. I was also able to set up the new IR reciver. So glad everything is coming along nicely.</p>
    <img src = "https://i.imgur.com/jkhEQ8A.jpg" width = 25% height = 25% alt = "new IR receiver"></img>
    <p>13 September 2018. A few weeks ago the IR receiver burnt out. I ordered a new one from China and it only took 2 weeks to get here.</p>
	<img src="https://i.imgur.com/Ww0QkrQ.jpg"width = 25% height= 25% alt = "HEX codes"></img>
	<p>1 August 2018. Getting the HEX codes for the remote control. I was suprised at how many stray signals the receiver was picking up.
    </p>
	<img src = "https://i.imgur.com/Z8mAxd5.jpg" width = 25% height= 25% alt ="Wires">
	<p>1 August 2018. Setting up the IR receiver. During this time I was also moving out of my old apartment. My mom couldn't afford internet so I had to go to the library to work on the project.</p>
	<!--<img src = "" alt = "Wilma"></img>
	<p>Looking for food</p> -->
	<img src = "https://i.imgur.com/syVOE65.gif" width = 25% height = 25% alt = "LED gif"></img>
	<p>28 July 2018. Phone Home.</p>
	<img src="https://i.imgur.com/rUE4vwZ.jpg"width = 25% height = 25% alt = "Parts">
	<p>28 July 2018.</p>
	<img src ="https://i.imgur.com/CUIOQWh.jpg" width = 25% height = 25% alt = "Installing the arduino IDE">
	<p>28 July 2018. Installing the arduino compiler</p>
	<img src="https://i.imgur.com/uIJGhJm.jpg" width = 25% height = 25% alt = "arduino arrives" ></img>
	<p>28 July 2018. Arduino arrives. Time to get started!</p>
    </center>
</div>

<button class="accordion"><center>Website</center></button>
<div class="panel">
	<center>
    <h3>///////////////////////////////////////////////////////</h3>
    <img src = "https://i.imgur.com/24BSA8L.png" width = 50% height = 50% alt = "website version 4"></img>
    <p>17 September 2018. I added description to all the projects save for the website tab. I'll probably update that in the future.</p>
    <img src="https://i.imgur.com/MeHxLBp.png" width = 50% height = 50% alt = "website version 3"></img>
    <p>9 September 2018. The old logo was a little too bright so I made a new one and set it as a banner image that covers the entire header area. There's still some white space above the github link that I'm trying to get rid of. I'll take care of that either later this evening or tomorrow when I get some free time.</p>
    <img src="https://i.imgur.com/9hapBb0.jpg" width = 50% height = 50% alt = "website version 2">
   	<p>6 September 2018. The second iteration of the website. This version removed the name above the drop down menus and added a logo in the top right corner.<p>
    
    <img src = "https://i.imgur.com/ayK27pr.png" width = 50% height = 50% alt = "website version 1"></img>
  <p><center>5 September 2018. Finally got the drop down menus working. Website seems to be coming along nicely.</p>
  </center>
  
</div>

<button class="accordion"><center>Unity</center></button>
<div class="panel">
	<center>
    <h3>///////////////////////////////////////////////////////</h3>
    <p>Another inpiration from YouTube. One day I decided I wanted to make a video game. When I first started coding I was naturally drawn to making card games, as they seemed relatively simple to make and were a good way for me to fine tune my coding/development skills. As time went on and I became a better programmer, I wanted to test my skills on something more complicated. I watched some videos on how to make a game in Unity and created the general concept pictured below. This project will likely take a lot of time and I'll have to work on it during one of my breaks.</p>
	<img src = "https://i.imgur.com/ZHGYrL7.gif" alt = "concept gif"></img>
  <p>9 September 2018. General concept for what the the game is going to feel like.</p>
  </center>
</div>
<button class="accordion"><center>Blackjack</center></button>
<div class="panel">
  <center>
  <h3>///////////////////////////////////////////////////////</h3>
    <p>During this past summer, I decided to swap to Computer Science. I had taken a coding class back in 2016 but I had forgotten a lot of it since then. I decided that Blackjack was relatively simple enough to make that it would give me a refresher on coding.</p>
    <p>I spent hours at the library coding it up. I am relatively proud of it. I learned how to implement A.I. in the form of a dealer that tries to beat the player. I also learned how to implement recursion in a real world setting. Overall it was a great learning experience and I'm proud to say that it was the first project that I completed.</p>
  <img src = "https://i.imgur.com/B6QjqXc.jpg" alt = "blackjack"></img>
  <p>14 September 2018. Version 4. This version is about 90% done. Some of the remaining bugs include  exception handling triggering unexpectedly, and lack of an exit condition under certain circumstances. It also highlights the dealer AI in which the dealer will draw cards until he either beats the player or busts.</p>
  </center>
</div>

<button class="accordion"><center>Data Science (coming soon)</center></button>
<div class="panel">
  <p></p>
</div>


<script>
var acc = document.getElementsByClassName("accordion");
var i;

for (i = 0; i < acc.length; i++) {
  acc[i].addEventListener("click", function() {
    this.classList.toggle("active");
    var panel = this.nextElementSibling;
    if (panel.style.maxHeight){
      panel.style.maxHeight = null;
    } else {
      panel.style.maxHeight = panel.scrollHeight + "px";
    } 
  });
}
</script>
    <!-- end .content --></article>
  <footer class = "footer-color">
  	<center>
    <p>| 954-805-4033 | keeleyz3929@yahoo.com | github.com/ZacharyKeeley |</p>
    </center>
    <address>
    </address>
  </footer>
  <!-- end .container --></div>
  </div>

</body>
</html>
